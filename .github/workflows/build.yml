---
name: Build

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config libx11-dev xorg-dev

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build server
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p build
          go build -tags test -ldflags="-s -w" -o "build/venture-server-linux-${{ matrix.arch }}" ./cmd/server

      - name: Build client
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags="-s -w" -o "build/venture-client-linux-${{ matrix.arch }}" ./cmd/client

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: build/venture-*
          retention-days: 7

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build server
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          New-Item -ItemType Directory -Force -Path build
          go build -tags test -ldflags="-s -w" -o "build/venture-server-windows-${{ matrix.arch }}.exe" ./cmd/server

      - name: Build client
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags="-s -w" -o "build/venture-client-windows-${{ matrix.arch }}.exe" ./cmd/client

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}
          path: build/venture-*
          retention-days: 7

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Homebrew deps (GLFW)
        run: |
          set -e
          brew update
          brew install glfw pkg-config


      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build server
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p build
          go build -tags test -ldflags="-s -w" -o "build/venture-server-darwin-${{ matrix.arch }}" ./cmd/server

      - name: Build client
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags="-s -w" -o "build/venture-client-darwin-${{ matrix.arch }}" ./cmd/client

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: darwin-${{ matrix.arch }}
          path: build/venture-*
          retention-days: 7
